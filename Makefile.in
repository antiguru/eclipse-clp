#
# ECLiPSe toplevel makefile
# $Id: Makefile.in,v 1.1 2006/09/23 01:45:05 snovello Exp $
#

ARCH = @ARCH@
top_srcdir = @top_srcdir@
PREFIX = @prefix@
MAKEFILE = Makefile.$(ARCH)


# MAKE_TARGET is install_all or install_cross
install:	@MAKE_TARGET@

# the subsystems that can be made even if cross-building
# (e.g. because they test for cross-building themselves)
install_cross:	make_sepia \
		make_flexlm \
		make_icparc_solvers \
		make_javainterface \
		make_visualisation \
		make_oci

# include subsystems that can only be made if we are building on target
# (e.g. because they try to make .eco/.eci files and need to run eclipse)
install_all:	install_cross \
		make_ecrc_solvers \
		make_pt_libraries \
		make_contrib

# build the reference manual only after all eci files have been installed
# MAKE_DOCUMENTS is either make_documents, or nothing if no tools available
install_documents:	@MAKE_DOCUMENTS@ install_all
	(cd $(PREFIX); bin/$(ARCH)/eclipse -e 'lib(document),ecis_to_htmls')


# --- subdirectories ---

make_sepia:		make_shm
	@echo ======== $@ ========
	@(cd $(top_srcdir)/sepia/$(ARCH); $(MAKE) install)

make_shm:
	@echo ======== $@ ========
	@(cd $(top_srcdir)/Shm/$(ARCH); $(MAKE) install)

make_flexlm:		make_sepia
	@echo ======== $@ ========
	@(cd $(top_srcdir)/Flexlm; $(MAKE) -f Makefile.$(ARCH) install)

make_documents:		make_bin
	@echo ======== $@ ========
	@(cd $(top_srcdir)/documents; ./INSTALL)

make_icparc_solvers:	make_bin
	@echo ======== $@ ========
	@(cd $(top_srcdir)/icparc_solvers; $(MAKE) -f Makefile.$(ARCH) install)

make_javainterface:	make_bin
	@echo ======== $@ ========
	@(cd $(top_srcdir)/JavaInterface; $(MAKE) -f Makefile.$(ARCH) install)

make_visualisation:	make_bin make_contrib
	@echo ======== $@ ========
	@(cd $(top_srcdir)/Visualisation; $(MAKE) -f Makefile.$(ARCH) install)

make_oci:		make_bin
	@echo ======== $@ ========
	@(cd $(top_srcdir)/Oci; $(MAKE) -f Makefile.$(ARCH) install)

make_ecrc_solvers:	make_bin
	@echo ======== $@ ========
	@(cd $(top_srcdir)/ecrc_solvers; $(MAKE) -f Makefile.$(ARCH))

make_pt_libraries:	make_bin
	@echo ======== $@ ========
	@(cd $(top_srcdir)/pt_libraries; $(MAKE) -f Makefile.$(ARCH))

make_contrib:		make_bin
	@echo ======== $@ ========
	@(cd $(top_srcdir)/Contrib; $(MAKE) -f Makefile.$(ARCH))

make_internal_doc:	make_bin
	@echo ======== $@ ========
	( cd $(top_srcdir)/sepia/$ARCH ; make pretty )
	( cd $(top_srcdir)/icparc_solvers ; make -f Makefile.$(ARCH) pretty )
	( cd $(top_srcdir)/ecrc_solvers ; make -f Makefile.$(ARCH) pretty )
	( cd $(top_srcdir)/pt_libraries ; make -f Makefile.$(ARCH) pretty )
	( cd $(top_srcdir)/documents/internal ; INSTALL )



# --- toplevel installation ---

TCL_DIR = @TCL_DIR@
COPYFILES = RUNME README_UNIX README_WIN.TXT README_MACOSX UNPACK \
	legal lib_tcl

# build executables by running the RUNME script
make_bin:		make_sepia make_copies
	@(cd $(PREFIX); ARCH=$(ARCH) ./RUNME < /dev/null)

make_copies:	$(PREFIX)/tcltk
	@if test "$(PREFIX)" != "$(top_srcdir)" ; then \
	    /bin/cp -pr $(COPYFILES) $(PREFIX) ; \
	fi

# TODO: get rid of this
$(PREFIX)/tcltk:
	@if test -n "$(TCL_DIR)" -a -d "$(TCL_DIR)" ; then \
	    (cd $(PREFIX); @LN_S@ $(TCL_DIR) tcltk) ; \
	fi


# --- cleaning rules ---

clean:	clean_subdirs
	rm -rf $(PREFIX)/bin
	rm -rf $(PREFIX)/lib
	rm -rf $(PREFIX)/lib_public
	rm -rf $(PREFIX)/lib_noncom
	rm -rf $(PREFIX)/doc
	rm -rf $(PREFIX)/man
	rm -rf $(PREFIX)/include
	rm -f $(PREFIX)/tcltk
	rm -rf $(top_srcdir)/sys_include
	rm -rf $(top_srcdir)/sys_lib

clean_subdirs:
	(cd $(top_srcdir)/sepia/$(ARCH); $(MAKE) clean)
	(cd $(top_srcdir)/Shm/$(ARCH); $(MAKE) clean)
	(cd $(top_srcdir)/Flexlm; $(MAKE) -f Makefile.$(ARCH) clean)
	# (cd $(top_srcdir)/documents; $(MAKE) clean)
	(cd $(top_srcdir)/icparc_solvers; $(MAKE) -f Makefile.$(ARCH) clean)
	(cd $(top_srcdir)/JavaInterface; $(MAKE) -f Makefile.$(ARCH) clean)
	(cd $(top_srcdir)/Visualisation; $(MAKE) -f Makefile.$(ARCH) clean)
	(cd $(top_srcdir)/ecrc_solvers; $(MAKE) -f Makefile.$(ARCH) clean)
	(cd $(top_srcdir)/pt_libraries; $(MAKE) -f Makefile.$(ARCH) clean)
	(cd $(top_srcdir)/Contrib; $(MAKE) -f Makefile.$(ARCH) clean)
	(cd $(top_srcdir)/Mercury; $(MAKE) -f Makefile.$(ARCH) clean)


archclean:	archclean_subdirs
	rm -rf $(PREFIX)/bin/$(ARCH)
	rm -rf $(PREFIX)/lib/$(ARCH)
	rm -rf $(PREFIX)/lib_public/$(ARCH)
	rm -rf $(PREFIX)/lib_noncom/$(ARCH)
	rm -rf $(PREFIX)/include/$(ARCH)
	rm -rf $(top_srcdir)/sys_include/$(ARCH)
	rm -rf $(top_srcdir)/sys_lib/$(ARCH)

archclean_subdirs:
	(cd $(top_srcdir)/sepia/$(ARCH); $(MAKE) archclean)
	(cd $(top_srcdir)/Shm/$(ARCH); $(MAKE) archclean)
	(cd $(top_srcdir)/Flexlm; $(MAKE) -f Makefile.$(ARCH) archclean)
	# (cd $(top_srcdir)/documents; $(MAKE) archclean)
	(cd $(top_srcdir)/icparc_solvers; $(MAKE) -f Makefile.$(ARCH) archclean)
	(cd $(top_srcdir)/JavaInterface; $(MAKE) -f Makefile.$(ARCH) archclean)
	(cd $(top_srcdir)/Visualisation; $(MAKE) -f Makefile.$(ARCH) archclean)

